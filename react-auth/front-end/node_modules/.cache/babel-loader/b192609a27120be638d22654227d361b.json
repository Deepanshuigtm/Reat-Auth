{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport useToken from \"./useToken\";\n\nfunction useUser() {\n  _s();\n\n  const [token] = useToken();\n\n  const getPayLodFromToken = token => {\n    const encodedPayload = token.split('.')[1];\n    return JSON.parse(atob(encodedPayload));\n  };\n\n  const [user, setUser] = useState(() => {\n    if (!token) return null;\n    return getPayLodFromToken(token);\n  });\n  useEffect(() => {\n    if (!token) {\n      setUser(null);\n    } else {\n      setUser(getPayLodFromToken);\n    }\n  }, [token]);\n  return user;\n}\n\n_s(useUser, \"XtQhiMYdT6KKnZYS/oF2aCVuNyM=\", false, function () {\n  return [useToken];\n});\n\nexport default useUser;","map":{"version":3,"sources":["/Users/deepanshu/Desktop/react-auth/front-end/src/auth/useUser.js"],"names":["useEffect","useState","useToken","useUser","token","getPayLodFromToken","encodedPayload","split","JSON","parse","atob","user","setUser"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,OAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,KAAD,IAAUF,QAAQ,EAAxB;;AAEA,QAAMG,kBAAkB,GAAGD,KAAK,IAAI;AAChC,UAAME,cAAc,GAAGF,KAAK,CAACG,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAvB;AACA,WAAOC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACJ,cAAD,CAAf,CAAP;AACH,GAHD;;AAKA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,MAAI;AACjC,QAAI,CAACG,KAAL,EAAY,OAAO,IAAP;AACZ,WAAOC,kBAAkB,CAACD,KAAD,CAAzB;AACH,GAH+B,CAAhC;AAKAJ,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACI,KAAJ,EAAU;AACNQ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAFD,MAEK;AACDA,MAAAA,OAAO,CAACP,kBAAD,CAAP;AACH;AAEJ,GAPQ,EAOP,CAACD,KAAD,CAPO,CAAT;AAQA,SAAOO,IAAP;AACH;;GAtBQR,O;UACWD,Q;;;AAsBpB,eAAeC,OAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useToken from \"./useToken\";\n\nfunction useUser(){\n    const [token] = useToken()\n\n    const getPayLodFromToken = token => {\n        const encodedPayload = token.split('.')[1];\n        return JSON.parse(atob(encodedPayload))\n    }\n\n    const [user, setUser] = useState(()=>{\n        if (!token) return null;\n        return getPayLodFromToken(token)\n    })\n\n    useEffect(()=>{\n        if(!token){\n            setUser(null)\n        }else{\n            setUser(getPayLodFromToken)\n        }\n\n    },[token])\n    return user\n}\nexport default useUser"]},"metadata":{},"sourceType":"module"}