[{"/Users/deepanshu/Desktop/react-auth/front-end/src/index.js":"1","/Users/deepanshu/Desktop/react-auth/front-end/src/reportWebVitals.js":"2","/Users/deepanshu/Desktop/react-auth/front-end/src/App.js":"3","/Users/deepanshu/Desktop/react-auth/front-end/src/Routes.js":"4","/Users/deepanshu/Desktop/react-auth/front-end/src/pages/UserInfoPage.js":"5","/Users/deepanshu/Desktop/react-auth/front-end/src/pages/LoginPage.js":"6","/Users/deepanshu/Desktop/react-auth/front-end/src/pages/SignupPage.js":"7","/Users/deepanshu/Desktop/react-auth/front-end/src/auth/PrivateRoute.js":"8","/Users/deepanshu/Desktop/react-auth/front-end/src/auth/useToken.js":"9","/Users/deepanshu/Desktop/react-auth/front-end/src/auth/useUser.js":"10"},{"size":504,"mtime":1618424837000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1618424837000,"results":"13","hashOfConfig":"12"},{"size":164,"mtime":1618424837000,"results":"14","hashOfConfig":"12"},{"size":717,"mtime":1723520437194,"results":"15","hashOfConfig":"12"},{"size":3634,"mtime":1723634980458,"results":"16","hashOfConfig":"12"},{"size":1364,"mtime":1723578343740,"results":"17","hashOfConfig":"12"},{"size":1621,"mtime":1723578271022,"results":"18","hashOfConfig":"12"},{"size":253,"mtime":1723574062319,"results":"19","hashOfConfig":"12"},{"size":345,"mtime":1723563181163,"results":"20","hashOfConfig":"12"},{"size":610,"mtime":1723635138778,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1e1cgyj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/deepanshu/Desktop/react-auth/front-end/src/index.js",[],["46","47"],"/Users/deepanshu/Desktop/react-auth/front-end/src/reportWebVitals.js",[],"/Users/deepanshu/Desktop/react-auth/front-end/src/App.js",[],"/Users/deepanshu/Desktop/react-auth/front-end/src/Routes.js",[],"/Users/deepanshu/Desktop/react-auth/front-end/src/pages/UserInfoPage.js",["48"],"import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport useUser from '../auth/useUser';\nimport useToken from '../auth/useToken';\n\nexport const UserInfoPage = () => {\n    const user = useUser()\n    const [token, setToken] = useToken();\n\n    const {id, email, info } = user;\n    // We'll use the history to navigate the user\n    // programmatically later on (we're not using it yet)\n    const history = useHistory();\n\n    // These states are bound to the values of the text inputs\n    // on the page (see JSX below). \n    const [favoriteFood, setFavoriteFood] = useState(info.favoriteFood || '');\n    const [hairColor, setHairColor] = useState(info.hairColor || '');\n    const [bio, setBio] = useState(info.bio || '');\n\n    // These state variables control whether or not we show\n    // the success and error message sections after making\n    // a network request (see JSX below).\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n    const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n    // This useEffect hook automatically hides the\n    // success and error messages after 3 seconds when they're shown.\n    // Just a little user interface improvement.\n    useEffect(() => {\n        if (showSuccessMessage || showErrorMessage) {\n            setTimeout(() => {\n                setShowSuccessMessage(false);\n                setShowErrorMessage(false);\n            }, 3000);\n        }\n    }, [showSuccessMessage, showErrorMessage]);\n\n    const saveChanges = async () => {\n        try{\n            const res = await axios.put(`/api/users/${id}`,{\n                favoriteFood,\n                hairColor,\n                bio\n            },{\n                headers: { Authorization :`Bearer ${token}` }\n            });\n            const { token: newToken } = res.data;\n            setToken(newToken)\n            setShowSuccessMessage(true)\n\n        }catch(err){\n            console.log(err,id, hairColor, favoriteFood,`Bearer ${token}`)\n            setShowErrorMessage(true)\n        }\n    }\n\n    const logOut = () => {\n        // We'll want to log the user out here\n        // and send them to the \"login page\"\n        alert('Log out functionality not implemented yet');\n    }\n    \n    const resetValues = () => {\n        setFavoriteFood(info.favoriteFood)\n        setBio(info.bio)\n        setHairColor(info.hairColor)\n    }\n    \n    // And here we have the JSX for our component. It's pretty straightforward\n    return (\n        <div className=\"content-container\">\n            <h1>Info for {email}</h1>\n            {showSuccessMessage && <div className=\"success\">Successfully saved user data!</div>}\n            {showErrorMessage && <div className=\"fail\">Uh oh... something went wrong and we couldn't save changes</div>}\n            <label>\n                Favorite Food:\n                <input\n                    onChange={e => setFavoriteFood(e.target.value)}\n                    value={favoriteFood} />\n            </label>\n            <label>\n                Hair Color:\n                <input\n                    onChange={e => setHairColor(e.target.value)}\n                    value={hairColor} />\n            </label>\n            <label>\n                Bio:\n                <input\n                    onChange={e => setBio(e.target.value)}\n                    value={bio} />\n            </label>\n            <hr />\n            <button onClick={saveChanges}>Save Changes</button>\n            <button onClick={resetValues}>Reset Values</button>\n            <button onClick={logOut}>Log Out</button>\n        </div>\n    );\n}","/Users/deepanshu/Desktop/react-auth/front-end/src/pages/LoginPage.js",["49","50"],"import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport useToken from \"../auth/useToken\";\n\nfunction LoginPage(){\n    const [token, setToken] = useToken();\n    const [email, setEmail] = useState('')\n    const [errorMessage, setErrorMessage] = useState('')\n    const [password, setPassword] = useState('')\n\n    const history = useHistory();\n\n    const onLoginClicked = async() => {\n        const res = await axios.post('api/login',{\n            email:email,\n            password:password\n        })\n        const { token } = res.data;\n        setToken(token)\n        history.push('/')\n    }\n\n    return(\n        <div className=\"content-container\">\n            <h1>Log In</h1>\n            {!errorMessage && <div className=\"fail\">{errorMessage}</div>}\n            <input placeholder=\"someone@hmail.com\" value={email} onChange={e => setEmail(e.target.value)}/>\n            <input placeholder=\"password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)}/>\n            <hr/>\n            <button disabled={!email || !password} onClick={onLoginClicked}>Login</button>\n            <button onClick={() => history.push('/forgot-password')}>Forgot Password</button>\n            <button onClick={() => history.push('/signup')}>Sign Up</button>\n        </div>\n    )\n}\nexport default LoginPage;","/Users/deepanshu/Desktop/react-auth/front-end/src/pages/SignupPage.js",["51","52"],"import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport useToken from \"../auth/useToken\";\n\nfunction SignupPage(){\n    const [token, setToken] = useToken();\n    const [email, setEmail] = useState('')\n    const [errorMessage, setErrorMessage] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    const history = useHistory();\n\n    const onSignClicked = async() => {\n        const res = await axios.post('api/signup',{\n            email:email,\n            password:password\n        })\n        const { token } = res.data\n        console.log(token)\n        setToken(token)\n        history.push('/')\n    }\n\n    return(\n        <div className=\"content-container\">\n            <h1>Signup</h1>\n            {!errorMessage && <div className=\"fail\">{errorMessage}</div>}\n            <input placeholder=\"someone@hmail.com\" value={email} onChange={e => setEmail(e.target.value)}/>\n            <input placeholder=\"password\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)}/>\n            <input placeholder=\"password\" type=\"password\" value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)}/>\n            <hr/>\n            <button disabled={!email || !password || password !== confirmPassword} onClick={onSignClicked}>Signup</button>\n            <button onClick={() => history.push('/forgot-password')}>Forgot Password</button>\n            <button onClick={() => history.push('/login')}>Sign In</button>\n        </div>\n    )\n}\nexport default SignupPage;","/Users/deepanshu/Desktop/react-auth/front-end/src/auth/PrivateRoute.js",[],"/Users/deepanshu/Desktop/react-auth/front-end/src/auth/useToken.js",[],"/Users/deepanshu/Desktop/react-auth/front-end/src/auth/useUser.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":14,"column":11,"nodeType":"59","messageId":"60","endLine":14,"endColumn":18},{"ruleId":"57","severity":1,"message":"61","line":7,"column":12,"nodeType":"59","messageId":"60","endLine":7,"endColumn":17},{"ruleId":"57","severity":1,"message":"62","line":9,"column":26,"nodeType":"59","messageId":"60","endLine":9,"endColumn":41},{"ruleId":"57","severity":1,"message":"61","line":7,"column":12,"nodeType":"59","messageId":"60","endLine":7,"endColumn":17},{"ruleId":"57","severity":1,"message":"62","line":9,"column":26,"nodeType":"59","messageId":"60","endLine":9,"endColumn":41},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]